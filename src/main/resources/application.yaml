#<<<<<<< HEAD
spring:
  config:
#    import: "file:./src/main/resources/secret.properties"
    import: "optional:classpath:secret.properties"
  datasource:
    url: jdbc:mysql://${DB_HOST:mysql-user-service}:3306/${DB_NAME:NexChangeUserDB}
    username: ${DB_USER:root}
    password: ${MYSQL_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
  data:
    redis:
      host: ${REDIS_HOST:redis-service}
      port: ${REDIS_PORT:6379}
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:kafka-service:9092}  # Kafka bootstrap servers，
    consumer:
      group-id: user-system
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        spring.json.trusted.packages: "com.nus.nexchange.*"  # Kafka 消费者信任的包
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
jwt:
  secret: ${JWT_SECRET}
server:
  port: 8081

logging:
  level:
    org.springframework.boot.context.config: DEBUG
    com.zaxxer.hikari: DEBUG
    org.hibernate.SQL: DEBUG
#=======
#spring:
#  config:
#    import: "file:./src/main/resources/secret.properties"
#  datasource:
#    url: jdbc:mysql://localhost:3306/NexChangeUserDB
#    username: root
#    password: ${MYSQL_PASSWORD}
#    driver-class-name: com.mysql.cj.jdbc.Driver
#  jpa:
#    hibernate:
#      ddl-auto: update
#    properties:
#      hibernate:
#        dialect: org.hibernate.dialect.MySQLDialect
#  data:
#    redis:
#      host: localhost
#      port: 6379
#  kafka:
#    bootstrap-servers: localhost:9092
#    consumer:
#      group-id: user-system
#      auto-offset-reset: earliest
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      properties:
#        spring.json.trusted.packages: "com.nus.nexchange.*"
#    producer:
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.apache.kafka.common.serialization.StringSerializer
#server:
#  port: 8081
#>>>>>>> origin/master

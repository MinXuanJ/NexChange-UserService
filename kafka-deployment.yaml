apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      initContainers:
        - name: wait-for-zookeeper
          image: busybox
          command: ['sh', '-c', 'until nc -z zookeeper-service 2181; do echo waiting for zookeeper; sleep 2; done;']
      containers:
        - name: kafka
          image: wurstmeister/kafka:2.13-2.8.1
          ports:
            - containerPort: 9092
          env:
            - name: KAFKA_BROKER_ID
              value: "1"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "zookeeper-service:2181"
            - name: KAFKA_LISTENERS
              value: "INTERNAL://:9092"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "INTERNAL://kafka-service:9092"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "INTERNAL:PLAINTEXT"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: "INTERNAL"
            - name: KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS
              value: "60000"
            - name: KAFKA_ZOOKEEPER_SESSION_TIMEOUT_MS
              value: "60000"
            - name: KAFKA_MESSAGE_MAX_BYTES
              value: "10485760"
            - name: KAFKA_REPLICA_FETCH_MAX_BYTES
              value: "10485760"
            - name: KAFKA_NUM_PARTITIONS
              value: "3"
            - name: KAFKA_DEFAULT_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_MIN_INSYNC_REPLICAS
              value: "1"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: "true"
            - name: KAFKA_DELETE_TOPIC_ENABLE
              value: "true"
            - name: KAFKA_LOG_RETENTION_HOURS
              value: "168"
            - name: KAFKA_LOG_SEGMENT_BYTES
              value: "1073741824"
          resources:
            requests:
              memory: "1Gi"
              cpu: "500m"
            limits:
              memory: "2Gi"
              cpu: "1000m"
          volumeMounts:
            - name: kafka-storage
              mountPath: /kafka
              # 添加子路径以分离不同类型的数据
            - name: kafka-storage
              mountPath: /kafka/kafka-logs
              subPath: kafka-logs
      volumes:
        - name: kafka-storage
          persistentVolumeClaim:
            claimName: kafka-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: kafka-service
spec:
  type: ClusterIP
  ports:
    - port: 9092
      targetPort: 9092
      name: internal
  selector:
    app: kafka
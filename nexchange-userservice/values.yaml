# values.yaml
# 应用程序环境变量
configMap:
  MYSQL_HOST: "userservice-mysql-user-service"
  MYSQL_PORT: "3306"
  DB_NAME: "NexChangeUserDB"
  DB_USER: "user"
  REDIS_HOST: "userservice-redis-service"
  REDIS_PORT: "6379"
  KAFKA_BOOTSTRAP_SERVERS: "userservice-kafka-service:9092"

secrets:
  MYSQL_PASSWORD: "password"
  MYSQL_ROOT_PASSWORD: "password"

# service
replicaCount: 2
image:
  repository: jmx7139/nexchange-userservice
  tag: "latest"
  pullPolicy: IfNotPresent

serviceAccount:
  create: true
  annotations: {}
  name: ""

service:
  type: ClusterIP
  port: 8081

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 256Mi

# 探针配置
livenessProbe:
  httpGet:
    path: /actuator/health
    port: http
  initialDelaySeconds: 60
  periodSeconds: 10

readinessProbe:
  httpGet:
    path: /actuator/health
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10


mysql:
  nameOverride: "mysql-user-service"
  enabled: true
  auth:
    database: NexChangeUserDB
    username: user
    password: "password"
    rootPassword: "password"
  primary:
    persistence:
      enabled: true
      storageClass: "local-path"  # k3s 默认存储类
      size: 1Gi  # 降低存储大小,适应本地环境
    resources:  # 添加资源限制
      limits:
        memory: "512Mi"
        cpu: "500m"
      requests:
        memory: "256Mi"
        cpu: "250m"
    startupProbe:  # 增加启动探针的超时时间
      enabled: true
      initialDelaySeconds: 60
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 30
    livenessProbe:  # 调整存活探针
      enabled: true
      initialDelaySeconds: 120
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 6
    readinessProbe:  # 调整就绪探针
      enabled: true
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 6
    configuration: |-
      [mysqld]
      # 降低内存使用
      performance_schema = off
      table_definition_cache = 400
      table_open_cache = 256
      innodb_buffer_pool_size = 128M
      innodb_log_buffer_size = 1M
      max_connections = 50
      
      default_authentication_plugin=mysql_native_password
      skip-name-resolve
      explicit_defaults_for_timestamp
      bind-address=0.0.0.0
      port=3306
      
      # 本地调试相关
      skip-log-bin
      skip-slave-start

redis:
  nameOverride: "redis-service"
  enabled: true
  replicaCount: 1
  auth:
    enabled: false
  master:
    persistence:
      enabled: false
#      size: 8Gi


# Kafka configuration with internal Zookeeper
kafka:
  nameOverride: "kafka-service"
  enabled: true
  kraftMode: true
  replicaCount: 2
  deleteTopicEnable: true
  zookeeper:
    enabled: false
  externalZookeeper:
    servers: []
  extraConfig: |
    auto.create.topics.enable=true
    default.replication.factor=1
    num.partitions=3

autoscaling:
  enabled: false  # 如果不需要 HPA，可以设置为 false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80

env:
  - name: JWT_SECRET
    value: "jwt_secret"

# Ingress
ingress:
  enabled: false


#  className: "nginx"
#  annotations:
#    kubernetes.io/ingress.class: nginx
#    # cert-manager.io/cluster-issuer: "letsencrypt-prod"
#  hosts:
#    - host: userservice.yourdomain.com
#      paths:
#        - path: /
#          pathType: Prefix
#  tls: []
#  # - secretName: userservice-tls
#  #   hosts:
#  #     - userservice.yourdomain.com


#zookeeper:
#  enabled: true
##  replicaCount: 2
#  persistence:
#    enabled: false
#kraft:
#  enabled: false